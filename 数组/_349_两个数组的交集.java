package 数组;

import java.util.*;

public class _349_两个数组的交集 {
    public int[] intersection(int[] nums1, int[] nums2) {
        List<Integer> list = new ArrayList();
        Set<Integer> s1 = new HashSet();
        Set<Integer> s2 = new HashSet();
        for (int i : nums1) {
            s1.add(i);
        }
        for (int j : nums2) {
            s2.add(j);
        }
        for (int n : s2) {
            if (s1.contains(n)) {
                list.add(n);
            }
        }
        int size = list.size();
        int[] res = new int[size];
        for (int j = 0; j < size; j++) {
            res[j] = list.get(j);
        }
        return res;
    }

    public static void main(String[] args) {
        _349_两个数组的交集 a = new _349_两个数组的交集();
        int[] num1 = new int[]{4, 9, 5};
        int[] num2 = new int[]{9, 4, 9, 8, 4};
        int[] res = a.intersection(num1, num2);
        System.out.print(Arrays.toString(res));
    }
}

class Test_349 {
    public int[] intersection(int[] nums1, int[] nums2) {
        if(nums1.length==0 || nums2.length==0){
            return new int[0];
        }

        boolean[] hash = new boolean[1000];
        for(int nums: nums1){
            hash[nums] = true;
        }
        int count=0;
        int[] res = new int[Math.min(nums1.length, nums2.length)];
        for(int nums: nums2){
            if(hash[nums]){
                res[count++] = nums;
                hash[nums] = false;
            }
        }

        return Arrays.copyOf(res, count);
    }

    public static void main(String[] args) {
        Test_349 a = new Test_349();
        int[] num1 = new int[]{1, 2};
        int[] num2 = new int[]{1, 1};
        int[] res = a.intersection(num1, num2);
        System.out.print(Arrays.toString(res));
        int[] c = {180, 395, 311, 750, 949, 164, 212, 968, 978, 404, 381, 1, 265, 92, 331, 350, 375, 451, 903, 932, 129, 590, 771, 883, 900, 344, 712, 804, 367, 547, 596, 533, 22, 691, 125, 558, 450, 74, 771, 673, 778, 45, 44, 172, 63, 260, 669, 374, 526, 337, 138, 459, 724, 458, 428, 851, 536, 387, 93, 586, 453, 715, 29, 330, 60, 648, 541, 923, 244, 377, 164, 780, 748, 831, 708, 544, 176, 985, 1, 308, 256, 922, 645, 121, 42, 855, 667, 730, 115, 677, 289, 355, 478, 298, 849, 218, 730, 449, 621, 957, 244, 25, 22, 866, 287, 704, 841, 757, 916, 439, 124, 316, 575, 642, 4, 84, 345, 157, 4, 578, 359, 223, 936, 275, 997, 197, 478, 795, 369, 963, 733, 252, 18, 872, 690, 851, 985, 49, 124, 646, 153, 396, 150, 499, 96, 699, 848, 541, 214, 201, 544, 249, 974, 599, 937, 583, 711, 298, 375, 137, 829, 913, 625, 897, 757, 795, 266, 298, 6, 404, 809, 6, 879, 20, 943, 293, 717, 146, 634, 835, 805, 532, 75, 256, 115, 994, 147, 368, 784, 716, 579, 127, 341, 195, 233, 75, 194, 858, 741, 507, 932, 648, 610, 239, 604, 626, 67, 203, 793, 769, 429, 760, 466, 540, 258, 977, 614, 781, 276, 832, 771, 538, 296, 990, 832, 146, 895, 42, 458, 681, 582, 444, 301, 72, 786, 977, 483, 266, 868, 693, 703, 593, 536, 581, 594, 448, 793, 606, 71, 556, 230, 652, 711, 704, 8, 871, 700, 681, 431, 921, 655, 745, 344, 285, 842, 856, 401, 541, 364, 117, 933, 175, 250, 410, 608, 805, 446, 358, 233, 921, 430, 743, 126, 662, 22, 793, 371, 452, 55, 432, 521, 811, 548, 556, 160, 974, 567, 816, 802, 357, 379, 527, 237, 435, 669, 381, 583, 124, 188, 510, 6, 144, 493, 316, 135, 444, 251, 653, 656, 952, 49, 451, 558, 181, 838, 227, 605, 41, 677, 738, 858, 603, 888, 463, 406, 765, 754, 10, 956, 898, 815, 123, 727, 961, 816, 801, 243, 102, 606, 538, 581, 49, 424, 388, 746, 483, 682, 573, 666, 391, 764, 490, 879, 353, 861, 768, 24, 306, 499, 143, 363, 775, 453, 221, 85, 450, 874, 842, 836, 554, 518, 799, 116, 27, 455, 826, 995, 436, 429, 851, 613, 147, 42, 363, 946, 505, 510, 705, 192, 729, 809, 715, 390, 267, 364, 808, 733, 878, 919, 20, 877, 997, 917, 590, 196, 80, 868, 173, 325, 249, 346, 961, 734, 235, 27, 374, 914, 363, 905, 796, 399, 153, 51, 267, 522, 440, 630, 344, 719, 216, 787, 442, 589, 897, 419, 950, 777, 916, 534, 584, 277, 910, 372, 107, 732, 409, 73, 496, 927, 92, 317, 500, 609, 584, 806, 934, 382, 864, 656, 606, 165, 762, 407, 461, 957, 851, 795, 458, 470, 340, 83, 381, 323, 980, 457, 204, 313, 793, 949, 388, 985, 432, 172, 292, 184, 778, 924, 613, 756, 692, 874, 706, 527, 232, 397, 907, 28, 97, 899, 573, 282, 349, 104, 809, 318, 286, 258, 504, 908, 604, 765, 676, 148, 476, 283, 427, 975, 967, 178, 401, 593, 578, 711, 981, 599, 846, 362, 682, 612, 683, 902, 886, 648, 533, 811, 527, 961, 331, 602, 679, 726, 13, 321, 969, 78, 968, 760, 824, 266, 717, 303, 233, 630, 306, 81, 902, 896, 827, 453, 137, 184, 675, 835, 259, 335, 945, 204, 569, 237, 396, 646, 629, 411, 975, 291, 158, 87, 240, 382, 681, 756, 773, 440, 235, 687, 137, 748, 478, 670, 808, 132, 834, 24, 345, 240, 505, 732, 294, 794, 267, 433, 273, 100, 888, 634, 754, 947, 691, 469, 156, 873, 661, 583, 380, 789, 192, 37, 621, 798, 347, 401, 953, 395, 888, 386, 876, 692, 530, 784, 27, 211, 772, 612, 162, 209, 392, 21, 352, 959, 95, 784, 482, 588, 924, 738, 862, 463, 571, 731, 47, 698, 751, 569, 532, 870, 118, 677, 202, 208, 201, 573, 672, 358, 112, 501, 424, 802, 851, 202, 543, 620, 967, 159, 977, 614, 903, 797, 765, 99, 667, 999, 528, 220, 365, 263, 610, 513, 652, 781, 249, 453, 256, 371, 751, 492, 646, 544, 673, 130, 199, 987, 279, 866, 739, 599, 50, 197, 479, 114, 153, 121, 512, 828, 246, 701, 23, 103, 231, 426, 109, 547, 530, 14, 694, 37, 281, 339, 351, 396, 773, 406, 965, 773, 748, 118};
    System.out.println(c.length);
    }
}